#!/usr/bin/env node

const mongoose = require('mongoose');
const dotenv = require('dotenv');
const path = require('path');

// Load environment variables
dotenv.config({ path: path.resolve(__dirname, '../../../.env') });

const MONGODB_URI = process.env.MONGODB_URI;

if (!MONGODB_URI) {
  console.error('‚ùå MONGODB_URI environment variable is required. Please set your MongoDB Atlas connection string.');
  process.exit(1);
}

// Define Prompt schema
const promptSchema = new mongoose.Schema({
  code: String,
  name: String,
  content: String,
  variables: [String],
  category: String,
  order: Number,
  isActive: Boolean,
  isSystem: Boolean,
  metadata: {
    description: String,
    example: String,
    tips: String
  },
  lastUpdatedBy: mongoose.Schema.Types.ObjectId,
  createdAt: Date,
  updatedAt: Date
});

const Prompt = mongoose.model('Prompt', promptSchema);

// Updated prompt templates with title-based introduction and context preservation
const updatedPrompts = {
  // BBR Introduction - Now uses title instead of product_count
  'bbr_intro': {
    content: `Voc√™ √© um especialista em an√°lises comparativas escrevendo para um site afiliado em portugu√™s (pt-BR).
Escreva uma introdu√ß√£o empolgante para um artigo com o t√≠tulo: "{title}"

A introdu√ß√£o deve:
- Ter 2-3 par√°grafos
- Ser baseada especificamente no t√≠tulo fornecido
- Enfatizar que voc√™ testou e comparou m√∫ltiplas op√ß√µes
- Destacar que ajudar√° o leitor a escolher a melhor op√ß√£o
- Criar expectativa sobre o conte√∫do que vir√°
- Ser amig√°vel e profissional
- Usar portugu√™s do Brasil
- N√ÉO mencionar nomes espec√≠ficos de produtos ainda`,
    variables: ['title']
  },
  
  // BBR Product Review - Now includes previous_context
  'bbr_product': {
    content: `Voc√™ √© um especialista em an√°lises comparativas continuando um artigo.

Contexto anterior (√∫ltimas 2 se√ß√µes):
{previous_context}

Voc√™ est√° analisando o produto {position} de {total} na compara√ß√£o.
Nome do produto: {product_name}

Escreva uma an√°lise COMPARATIVA em portugu√™s (pt-BR) que:
1. Mantenha continuidade com o contexto anterior
2. Par√°grafo de abertura posicionando o produto entre as op√ß√µes (2-3 frases)
3. Exatamente 4 pr√≥s (vantagens competitivas espec√≠ficas)
4. Exatamente 2 contras (limita√ß√µes honestas em rela√ß√£o √†s alternativas)
5. Par√°grafo comparativo destacando quando este produto √© a melhor escolha
6. Call-to-action contextualizado

Formate sua resposta como:
DESCRIPTION: [par√°grafo de abertura]
PROS:
- [vantagem 1]
- [vantagem 2]
- [vantagem 3]
- [vantagem 4]
CONS:
- [limita√ß√£o 1]
- [limita√ß√£o 2]
ANALYSIS: [an√°lise comparativa e recomenda√ß√£o]`,
    variables: ['previous_context', 'position', 'total', 'product_name']
  },
  
  // BBR Conclusion - Updated with better context
  'bbr_conclusion': {
    content: `Voc√™ est√° concluindo um artigo comparativo intitulado: "{title}"

Produtos analisados: {product_names}
Contexto da introdu√ß√£o: {introduction}

Escreva uma conclus√£o em portugu√™s (pt-BR) que:
- Resume as compara√ß√µes destacando o MELHOR produto (1 par√°grafo)
- Mencione alternativas para diferentes necessidades/or√ßamentos
- D√™ uma recomenda√ß√£o final clara sobre qual escolher
- Agrade√ßa o leitor pela confian√ßa
- Tenha 2-3 par√°grafos no total
- Mantenha tom profissional e decisivo
- Fa√ßa refer√™ncia ao t√≠tulo do artigo`,
    variables: ['title', 'product_names', 'introduction']
  },
  
  // SPR Introduction - Title-based
  'spr_intro': {
    content: `Voc√™ √© um especialista em an√°lises detalhadas escrevendo para um site afiliado em portugu√™s (pt-BR).
Escreva uma introdu√ß√£o cativante para um artigo com o t√≠tulo: "{title}"

A introdu√ß√£o deve:
- Ter 2-3 par√°grafos
- Ser baseada especificamente no t√≠tulo fornecido
- Criar expectativa sobre a an√°lise detalhada que vir√°
- Mencionar que far√° uma an√°lise completa com pr√≥s, contras e experi√™ncia real
- Indicar que ajudar√° o leitor a tomar uma decis√£o informada
- Ser envolvente e detalhista
- Usar portugu√™s do Brasil
- N√ÉO mencionar o nome espec√≠fico do produto ainda`,
    variables: ['title']
  },
  
  // SPR Product Review - With context
  'spr_product': {
    content: `Voc√™ est√° escrevendo uma an√°lise detalhada de produto.

Contexto anterior:
{previous_context}

Nome do produto: {product_name}

Escreva uma an√°lise COMPLETA e APROFUNDADA em portugu√™s (pt-BR) que:
1. Mantenha continuidade com o contexto anterior
2. Par√°grafo detalhado sobre o produto e seu posicionamento (3-4 frases)
3. Exatamente 6 pr√≥s (benef√≠cios detalhados e espec√≠ficos)
4. Exatamente 3 contras (limita√ß√µes honestas mas equilibradas)
5. An√°lise aprofundada da experi√™ncia de uso (4-5 frases)
6. Recomenda√ß√£o final clara e persuasiva

Formate sua resposta como:
DESCRIPTION: [descri√ß√£o detalhada]
PROS:
- [benef√≠cio 1]
- [benef√≠cio 2]
- [benef√≠cio 3]
- [benef√≠cio 4]
- [benef√≠cio 5]
- [benef√≠cio 6]
CONS:
- [limita√ß√£o 1]
- [limita√ß√£o 2]
- [limita√ß√£o 3]
ANALYSIS: [an√°lise profunda e experi√™ncia de uso]`,
    variables: ['previous_context', 'product_name']
  },
  
  // Informational Introduction - Title-based
  'content_intro': {
    content: `Voc√™ √© um escritor especialista criando artigos educacionais em portugu√™s (pt-BR).
Escreva uma introdu√ß√£o envolvente para um artigo intitulado: "{title}"

O artigo cobrir√° os seguintes t√≥picos: {outline_topics}

A introdu√ß√£o deve:
- Ter 2-3 par√°grafos
- Ser baseada especificamente no t√≠tulo fornecido
- Capturar a aten√ß√£o do leitor
- Fazer uma breve vis√£o geral do que ser√° coberto
- Ser informativa e profissional
- Usar portugu√™s do Brasil
- N√ÉO ter foco em vendas, mas sim educacional

Escreva em tom amig√°vel e profissional adequado para um post de blog informativo.`,
    variables: ['title', 'outline_topics']
  },
  
  // Content Section - With context preservation
  'content_section': {
    content: `Voc√™ est√° escrevendo a se√ß√£o {position} de {total} para um artigo educacional em portugu√™s (pt-BR).

Contexto anterior (√∫ltimas 2 se√ß√µes):
{previous_context}

T√≠tulo da se√ß√£o: {section_title}
Descri√ß√£o da se√ß√£o: {section_description}

Escreva uma se√ß√£o abrangente que:
- Mantenha continuidade com o contexto anterior
- Comece com o t√≠tulo da se√ß√£o como H2
- Forne√ßa informa√ß√µes detalhadas e educacionais
- Tenha 3-4 par√°grafos
- Use bullet points quando apropriado
- Mantenha tom profissional e informativo
- N√ÉO tenha foco em vendas
- Use portugu√™s do Brasil

Foque em fornecer valor e educa√ß√£o ao leitor.`,
    variables: ['previous_context', 'position', 'total', 'section_title', 'section_description']
  }
};

async function updatePrompts() {
  try {
    console.log('üöÄ Connecting to MongoDB Atlas...');
    await mongoose.connect(MONGODB_URI);
    console.log('‚úÖ Connected to MongoDB Atlas\n');

    let updated = 0;
    let failed = 0;
    
    for (const [code, updates] of Object.entries(updatedPrompts)) {
      try {
        const prompt = await Prompt.findOne({ code });
        
        if (prompt) {
          // Update content and variables
          prompt.content = updates.content;
          prompt.variables = updates.variables;
          prompt.updatedAt = new Date();
          
          await prompt.save();
          console.log(`‚úÖ Updated ${code}:`);
          console.log(`   Variables: ${updates.variables.join(', ')}`);
          updated++;
        } else {
          console.log(`‚ö†Ô∏è  Prompt ${code} not found`);
        }
      } catch (error) {
        console.error(`‚ùå Error updating ${code}:`, error.message);
        failed++;
      }
    }

    console.log(`\nüìä Summary:`);
    console.log(`   ‚úÖ Updated: ${updated} prompts`);
    if (failed > 0) {
      console.log(`   ‚ùå Failed: ${failed} prompts`);
    }
    
    // Show current state
    console.log('\nüìã Current prompt variables:');
    const allPrompts = await Prompt.find({ category: { $in: ['bbr', 'spr', 'informational'] } })
      .sort({ category: 1, order: 1 });
    
    for (const prompt of allPrompts) {
      console.log(`${prompt.category}/${prompt.code}: [${prompt.variables.join(', ')}]`);
    }
    
  } catch (error) {
    console.error('‚ùå Error:', error);
  } finally {
    await mongoose.connection.close();
    console.log('\nüîå Database connection closed');
  }
}

// Run the update
updatePrompts();